# ==============================================================================
# TAPIRS
# A reproducible metabarcoding workflow using snakemake
# ==============================================================================

# conda:
#     "envs/Tapirs_blast.yaml"

import pandas as pd
configfile: "config/config.yaml"
# report: "reports/snakemake-report.rst"
# --------------------------------------------------
# Load library and sample information
# --------------------------------------------------

libraries_df = pd.read_table(config['samples'], header = None)  # Pull in libraries and samples from tsv

# Generate library wildcards
LIBRARIES = list(libraries_df[0])  # create list from column of dataframe
LIBRARIES = list(dict.fromkeys(LIBRARIES))  # dipping it into a dictionary to remove duplicates

# Generate samples wildcards
SAMPLES = list(libraries_df[1])  # create list from column of dataframe
SAMPLES = list(dict.fromkeys(SAMPLES))  # dipping it into a dictionary to remove duplicates

# Generate list of legitimate combinations
with open(config['samples']) as infile:
    real_combos = []
    for line in infile:
        real_combos.append(line.strip().replace('\t', '/'))
# real_combos = set(real_combos)  # remove duplicates

# ---------------------------------------------------
# Target rule
# ---------------------------------------------------

rule all:
    input:
    # Final csv
        "results/" + config['my_experiment'] + "_blast" + str(config['MLCA_identity']) + ".tsv",

# -----------------------------------------------------
# Rule files
# -----------------------------------------------------

include: "rules/qc.smk"
include: "rules/blast.smk"
include: "rules/lca.smk"
include: "rules/vsearch.smk"
